{"version":3,"file":"functionRequirements.js","names":["FunctionRequirements","requestType","description","queryParams","inputType","inputSchema","inputSchemaEncoded","outputType","outputSchema","outputSchemaEncoded","constructor","data","Object","assign","getRequestType","getDescription","getQueryParams","getInputType","getOutputType","getInputSchema","getOutputSchema","getInputBodyType","decodeSchemas","inputDecoded","atob","JSON","parse","outputDecoded","error","Error","message","exports"],"sources":["../../src/structs/functionRequirements.ts"],"sourcesContent":["import FunctionRequirementsFile from './functionRequirementsFile';\r\nimport { FunctionRequirementsQueryParam } from './functionRequirementsQueryParam';\r\nimport FunctionRequirementsJsonSchema from './functionRequirementsJsonSchema';\r\n\r\n\r\nexport class FunctionRequirements {\r\n  public requestType: string | null = null;\r\n  public description: string | null = null;\r\n\r\n  public queryParams: FunctionRequirementsQueryParam[] | null = null;\r\n\r\n  // public inputJsonSchemaEncoded: string | null = null;\r\n  // public inputJsonSchema: Record<string, any> | null = null;\r\n  // public inputJsonExample: string | null = null;\r\n  // public inputFile: FunctionRequirementsFile | null = null;\r\n  // public inputType: string | null = null;\r\n\r\n  // public outputJsonSchemaEncoded: string | null = null;\r\n  // public outputJsonSchema: Record<string, any> | null = null;\r\n  // public outputJsonExample: string | null = null;\r\n  // public outputFile: FunctionRequirementsFile | null = null;\r\n  // public outputType: string | null= null;\r\n\r\n  public inputType: string | null = null;\r\n  public inputSchema: null | FunctionRequirementsJsonSchema | FunctionRequirementsFile = null;\r\n  public inputSchemaEncoded: string | null = null;\r\n\r\n\r\n  public outputType: string | null = null;\r\n  public outputSchema: null | FunctionRequirementsJsonSchema | FunctionRequirementsFile = null;\r\n  public outputSchemaEncoded: string | null = null;\r\n\r\n  constructor(data: Partial<FunctionRequirements>) {\r\n    Object.assign(this, data);\r\n  }\r\n\r\n\r\n  // Getters and setters\r\n  public getRequestType(): string | null {\r\n    return this.requestType;\r\n  }\r\n\r\n  public getDescription(): string | null {\r\n    return this.description;\r\n  }\r\n\r\n  public getQueryParams(): FunctionRequirementsQueryParam[] | null {\r\n    return this.queryParams;\r\n  }\r\n\r\n  public getInputType(): string | null {\r\n    return this.inputType\r\n  }\r\n\r\n  public getOutputType(): string | null {\r\n    return this.outputType\r\n  }\r\n\r\n  public getInputSchema(): object | null {\r\n    return this.inputSchema\r\n  }\r\n\r\n  public getOutputSchema(): object | null {\r\n    return this.outputSchema\r\n  }\r\n\r\n  // public getInputJsonSchemaEncoded(): string | null {\r\n  //   return this.inputJsonSchemaEncoded;\r\n  // }\r\n\r\n  // public setInputJsonSchemaEncoded(encoded: string): void {\r\n  //   this.inputJsonSchemaEncoded = encoded;\r\n  // }\r\n\r\n  // public getInputFile(): FunctionRequirementsFile | null {\r\n  //   return this.inputFile;\r\n  // }\r\n\r\n  // public setInputFile(file: FunctionRequirementsFile): void {\r\n  //   this.inputFile = file;\r\n  // }\r\n\r\n  // public getInputJsonSchema(): Record<string, any> | null {\r\n  //   return this.inputJsonSchema;\r\n  // }\r\n\r\n  // public setInputJsonSchema(schema: Record<string, any>): void {\r\n  //   this.inputJsonSchema = schema;\r\n  // }\r\n\r\n  // public getOutputJsonSchemaEncoded(): string | null {\r\n  //   return this.outputJsonSchemaEncoded;\r\n  // }\r\n\r\n  // public setOutputJsonSchemaEncoded(encoded: string): void {\r\n  //   this.outputJsonSchemaEncoded = encoded;\r\n  // }\r\n\r\n  // public getOutputFile(): FunctionRequirementsFile | null {\r\n  //   return this.outputFile;\r\n  // }\r\n\r\n  // public setOutputFile(file: FunctionRequirementsFile): void {\r\n  //   this.outputFile = file;\r\n  // }\r\n\r\n  // public getOutputJsonSchema(): Record<string, any> | null {\r\n  //   return this.outputJsonSchema;\r\n  // }\r\n\r\n  // public setOutputJsonSchema(schema: Record<string, any>): void {\r\n  //   this.outputJsonSchema = schema;\r\n  // }\r\n\r\n  // public getInputJsonExample(): string | null {\r\n  //   return this.inputJsonExample;\r\n  // }\r\n\r\n  // public setInputJsonExample(example: string): void {\r\n  //   this.inputJsonExample = example;\r\n  // }\r\n\r\n  // public getOutputJsonExample(): string | null {\r\n  //   return this.outputJsonExample;\r\n  // }\r\n\r\n  // public setOutputJsonExample(example: string): void {\r\n  //   this.outputJsonExample = example;\r\n  // }\r\n\r\n  // public getFunctionCallingEncoded(): string | null {\r\n  //   return this.functionCallingEncoded;\r\n  // }\r\n\r\n  public getInputBodyType(): string | null {\r\n    return this.inputType;\r\n  }\r\n\r\n  \r\n  // Methods to decode JSON schemas\r\n  public decodeSchemas(): void {\r\n    try {\r\n      if (this.inputSchemaEncoded) {\r\n        const inputDecoded = atob(this.inputSchemaEncoded); // Decode Base64\r\n        this.inputSchema = JSON.parse(inputDecoded); // Parse JSON directly\r\n      }\r\n      if (this.outputSchemaEncoded) {\r\n        const outputDecoded = atob(this.outputSchemaEncoded); // Decode Base64\r\n        this.outputSchema = JSON.parse(outputDecoded); // Parse JSON directly\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        throw new Error(\"Failed to decode function requirements from server: \" + error.message);\r\n      } else {\r\n        throw new Error(\"Failed to decode function requirements from server: Unknown error occurred\");\r\n      }    \r\n    }\r\n  }\r\n  \r\n\r\n  // // Methods to check input exclusivity\r\n  // public checkInputs(): void {\r\n  //   if (this.inputJsonSchema && this.inputFile) {\r\n  //     throw new Error(\"Only one of 'input_json_schema' or 'input_file' can be set.\");\r\n  //   }\r\n  //   if (this.inputJsonSchema) {\r\n  //     this.inputType = FunctionRequirementsBodyType.JSON;\r\n  //   } else if (this.inputFile) {\r\n  //     this.inputType = FunctionRequirementsBodyType.FILE;\r\n  //   } else {\r\n  //     this.inputType = FunctionRequirementsBodyType.NONE;\r\n  //   }\r\n  // }\r\n\r\n  // // Methods to check output exclusivity\r\n  // public checkOutputs(): void {\r\n  //   if (this.outputJsonSchema && this.outputFile) {\r\n  //     throw new Error(\"Only one of 'output_json_schema' or 'output_file' can be set.\");\r\n  //   }\r\n  //   if (this.outputJsonSchema) {\r\n  //     this.outputType = FunctionRequirementsBodyType.JSON;\r\n  //   } else if (this.outputFile) {\r\n  //     this.outputType = FunctionRequirementsBodyType.FILE;\r\n  //   } else {\r\n  //     this.outputType = FunctionRequirementsBodyType.NONE;\r\n  //   }\r\n  // }\r\n}\r\n"],"mappings":";;;;;;AAKO,MAAMA,oBAAoB,CAAC;EACzBC,WAAW,GAAkB,IAAI;EACjCC,WAAW,GAAkB,IAAI;EAEjCC,WAAW,GAA4C,IAAI;;EAElE;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEOC,SAAS,GAAkB,IAAI;EAC/BC,WAAW,GAAqE,IAAI;EACpFC,kBAAkB,GAAkB,IAAI;EAGxCC,UAAU,GAAkB,IAAI;EAChCC,YAAY,GAAqE,IAAI;EACrFC,mBAAmB,GAAkB,IAAI;EAEhDC,WAAWA,CAACC,IAAmC,EAAE;IAC/CC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEF,IAAI,CAAC;EAC3B;;EAGA;EACOG,cAAcA,CAAA,EAAkB;IACrC,OAAO,IAAI,CAACb,WAAW;EACzB;EAEOc,cAAcA,CAAA,EAAkB;IACrC,OAAO,IAAI,CAACb,WAAW;EACzB;EAEOc,cAAcA,CAAA,EAA4C;IAC/D,OAAO,IAAI,CAACb,WAAW;EACzB;EAEOc,YAAYA,CAAA,EAAkB;IACnC,OAAO,IAAI,CAACb,SAAS;EACvB;EAEOc,aAAaA,CAAA,EAAkB;IACpC,OAAO,IAAI,CAACX,UAAU;EACxB;EAEOY,cAAcA,CAAA,EAAkB;IACrC,OAAO,IAAI,CAACd,WAAW;EACzB;EAEOe,eAAeA,CAAA,EAAkB;IACtC,OAAO,IAAI,CAACZ,YAAY;EAC1B;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEOa,gBAAgBA,CAAA,EAAkB;IACvC,OAAO,IAAI,CAACjB,SAAS;EACvB;;EAGA;EACOkB,aAAaA,CAAA,EAAS;IAC3B,IAAI;MACF,IAAI,IAAI,CAAChB,kBAAkB,EAAE;QAC3B,MAAMiB,YAAY,GAAGC,IAAI,CAAC,IAAI,CAAClB,kBAAkB,CAAC,CAAC,CAAC;QACpD,IAAI,CAACD,WAAW,GAAGoB,IAAI,CAACC,KAAK,CAACH,YAAY,CAAC,CAAC,CAAC;MAC/C;MACA,IAAI,IAAI,CAACd,mBAAmB,EAAE;QAC5B,MAAMkB,aAAa,GAAGH,IAAI,CAAC,IAAI,CAACf,mBAAmB,CAAC,CAAC,CAAC;QACtD,IAAI,CAACD,YAAY,GAAGiB,IAAI,CAACC,KAAK,CAACC,aAAa,CAAC,CAAC,CAAC;MACjD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;QAC1B,MAAM,IAAIA,KAAK,CAAC,sDAAsD,GAAGD,KAAK,CAACE,OAAO,CAAC;MACzF,CAAC,MAAM;QACL,MAAM,IAAID,KAAK,CAAC,4EAA4E,CAAC;MAC/F;IACF;EACF;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACE,OAAA,CAAA/B,oBAAA,GAAAA,oBAAA","ignoreList":[]}